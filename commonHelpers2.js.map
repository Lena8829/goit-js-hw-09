{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["/* \n * Використовуючи делегуваня, відстежуй на формі подію input \n \n * і щоразу записуй у локальне сховище об'єкт з полями email і message, у яких зберігай поточні значення полів форми. \n \n * Нехай ключем для сховища буде рядок \"feedback-form-state\".\n\n Під час завантаження сторінки перевіряй стан сховища,\n \n і якщо там є збережені дані, то заповнюй ними поля форми. \n \n В іншому випадку поля повинні бути порожніми.\n\n Під час сабміту форми очищай сховище і поля форми,\n\n а також виводь у консоль об'єкт з полями email, message та їхніми поточними значеннями.\n*/\n\nconst STORAGE_KEY = 'feedback-form-state';\n\nconst form = document.querySelector('.feedback-form');\n\nform.addEventListener('input', textInput); // monitor the input event on the form\n\nfunction textInput(event) {\n  const savedData = {\n    email: form.email.value.trim(), // remove spaces with 'trim()'\n    message: form.message.value.trim(),\n  };\n\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(savedData)); // saving data and make obj ---> a string\n}\n"],"names":["STORAGE_KEY","form","textInput","event","savedData"],"mappings":"wFAkBA,MAAMA,EAAc,sBAEdC,EAAO,SAAS,cAAc,gBAAgB,EAEpDA,EAAK,iBAAiB,QAASC,CAAS,EAExC,SAASA,EAAUC,EAAO,CACxB,MAAMC,EAAY,CAChB,MAAOH,EAAK,MAAM,MAAM,KAAM,EAC9B,QAASA,EAAK,QAAQ,MAAM,KAAM,CACtC,EAEE,aAAa,QAAQD,EAAa,KAAK,UAAUI,CAAS,CAAC,CAC7D"}